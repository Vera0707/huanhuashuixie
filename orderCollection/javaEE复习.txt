
1.面向对象的三条主线
    1.类及类的成分
    2.面向对象的三大特性
    3.关键字 this super import package abstract static final interface

2.java程序关注与类的设计.类从设计的角度: 并列关系
    从设计角度 关联关系 继承关系 聚合关系

3.类的成分 属性 方法 构造器 代码块 内部类
    1.属性  ① 变量的分类 成员变量(属性 Filed)VS局部变量(方法的形参 方法的内部 代码块内部)
              数据类型: 基本数据类型(8种 默认值不同) 引用数据类型(数组 类 接口 默认值为null)
           ② 属性的声明格式
                修饰符 数据类型 变量名 = 初始化值;   java是强数据类型语言
           ③ 属性的赋值 1.默认初始化 2.显示的初始化 3.代码块的初始化 4.构造器中初始化 5.方法中对属性赋值
    2.方法  ① 方法 修饰符(其他关键字 static final abstract) 返回值类型 方法名(形参列表){方法体}
           ② 方法的重载 vs 方法的重写
    3.构造器
        ① 构造器的作业
            1.创建类的对象 初始化对象的成员变量
        ② 构造器也可以重载
    4.代码块
        ① 初始化类的成员变量
        ② 分类:静态 非静态
    5.内部类
        ① 分类 成员内部类(静态 非静态)  局部内部类
        ② 掌握
            1.如何创建成员内部类的对象
            2.如何区分外部类内部类的变量(尤其是变量重名时)
            3.局部内部类的调用

4.类的初始化(创建类的对象)
    1.如何创建类的对象
    2.内存解析
      ①  栈: 局部变量 对象的引用名 数组的引用名
          堆; new出来的东西
          方法区: （字符串常量池）
          静态域: 存放类中静态的变量
      ②  如何理解创建的对象在内存中加载的过程
5.面向对三大特性
    1.封装性
        通过私有化类的成员变量,通过公共的get和set方法调用和修改
        还可以对类的其他结构进行"封装"
        权限修饰符 public protected 缺省 private
    2.继承性
        通过一个雷A继承另一个类,就可以获取类B中的结构（主要的:属性 方法 构造器)
        java中类的继承性:单继承的
    3.多态性
        体现:方法的重载与重写:子类对象的多态性 Person p = new Student();
        子类方法多态性的作用:虚拟方法调用
        向上转型 向下转型
6.其他关键字
    1.this 修饰属性/方法/构造器 表示当前正在创建的对象
    2.super 修饰属性/方法/构造器 表示显示的调用父类的构造器,尤其是字父类有重名的方法/属性
    3.static 修饰属性/方法/代码块/内部类 随着类的加载而加载
    4.final 修饰属性/方法
    5.abstract 修饰类/方法
        不能修饰属性/构造器
        不能与final static private共用
    6.interface 表示一个接口 与类并列的一个解构
        类与接口通过实现发生关系
    7.package import...